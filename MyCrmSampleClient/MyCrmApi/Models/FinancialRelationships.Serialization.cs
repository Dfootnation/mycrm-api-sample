// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    public partial class FinancialRelationships : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Expenses))
            {
                writer.WritePropertyName("expenses");
                writer.WriteObjectValue(Expenses);
            }
            if (Optional.IsDefined(Addresses))
            {
                writer.WritePropertyName("addresses");
                writer.WriteObjectValue(Addresses);
            }
            if (Optional.IsDefined(Clients))
            {
                writer.WritePropertyName("clients");
                writer.WriteObjectValue(Clients);
            }
            if (Optional.IsDefined(Incomes))
            {
                writer.WritePropertyName("incomes");
                writer.WriteObjectValue(Incomes);
            }
            if (Optional.IsDefined(Liabilities))
            {
                writer.WritePropertyName("liabilities");
                writer.WriteObjectValue(Liabilities);
            }
            if (Optional.IsDefined(Assets))
            {
                writer.WritePropertyName("assets");
                writer.WriteObjectValue(Assets);
            }
            writer.WriteEndObject();
        }

        internal static FinancialRelationships DeserializeFinancialRelationships(JsonElement element)
        {
            Optional<RelationshipsMultipleDocument> expenses = default;
            Optional<RelationshipsMultipleDocument> addresses = default;
            Optional<RelationshipsMultipleDocument> clients = default;
            Optional<RelationshipsMultipleDocument> incomes = default;
            Optional<RelationshipsMultipleDocument> liabilities = default;
            Optional<RelationshipsMultipleDocument> assets = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("expenses"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    expenses = RelationshipsMultipleDocument.DeserializeRelationshipsMultipleDocument(property.Value);
                    continue;
                }
                if (property.NameEquals("addresses"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    addresses = RelationshipsMultipleDocument.DeserializeRelationshipsMultipleDocument(property.Value);
                    continue;
                }
                if (property.NameEquals("clients"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    clients = RelationshipsMultipleDocument.DeserializeRelationshipsMultipleDocument(property.Value);
                    continue;
                }
                if (property.NameEquals("incomes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    incomes = RelationshipsMultipleDocument.DeserializeRelationshipsMultipleDocument(property.Value);
                    continue;
                }
                if (property.NameEquals("liabilities"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    liabilities = RelationshipsMultipleDocument.DeserializeRelationshipsMultipleDocument(property.Value);
                    continue;
                }
                if (property.NameEquals("assets"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    assets = RelationshipsMultipleDocument.DeserializeRelationshipsMultipleDocument(property.Value);
                    continue;
                }
            }
            return new FinancialRelationships(expenses.Value, addresses.Value, clients.Value, incomes.Value, liabilities.Value, assets.Value);
        }
    }
}
