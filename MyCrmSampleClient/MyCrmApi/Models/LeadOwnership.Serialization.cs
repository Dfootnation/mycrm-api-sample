// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    public partial class LeadOwnership : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Lid))
            {
                if (Lid != null)
                {
                    writer.WritePropertyName("lid");
                    writer.WriteStringValue(Lid);
                }
                else
                {
                    writer.WriteNull("lid");
                }
            }
            if (Optional.IsDefined(Contact))
            {
                writer.WritePropertyName("contact");
                writer.WriteObjectValue(Contact);
            }
            if (Optional.IsDefined(OwnershipPercentage))
            {
                if (OwnershipPercentage != null)
                {
                    writer.WritePropertyName("ownershipPercentage");
                    writer.WriteNumberValue(OwnershipPercentage.Value);
                }
                else
                {
                    writer.WriteNull("ownershipPercentage");
                }
            }
            writer.WriteEndObject();
        }

        internal static LeadOwnership DeserializeLeadOwnership(JsonElement element)
        {
            Optional<string> lid = default;
            Optional<LeadContact> contact = default;
            Optional<double?> ownershipPercentage = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("lid"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lid = null;
                        continue;
                    }
                    lid = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("contact"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    contact = LeadContact.DeserializeLeadContact(property.Value);
                    continue;
                }
                if (property.NameEquals("ownershipPercentage"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        ownershipPercentage = null;
                        continue;
                    }
                    ownershipPercentage = property.Value.GetDouble();
                    continue;
                }
            }
            return new LeadOwnership(lid.Value, contact.Value, Optional.ToNullable(ownershipPercentage));
        }
    }
}
