// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    public partial class LeadAsset : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Lid))
            {
                if (Lid != null)
                {
                    writer.WritePropertyName("lid");
                    writer.WriteStringValue(Lid);
                }
                else
                {
                    writer.WriteNull("lid");
                }
            }
            if (Optional.IsDefined(Description))
            {
                if (Description != null)
                {
                    writer.WritePropertyName("description");
                    writer.WriteStringValue(Description);
                }
                else
                {
                    writer.WriteNull("description");
                }
            }
            if (Optional.IsDefined(Value))
            {
                if (Value != null)
                {
                    writer.WritePropertyName("value");
                    writer.WriteNumberValue(Value.Value);
                }
                else
                {
                    writer.WriteNull("value");
                }
            }
            if (Optional.IsDefined(AccountName))
            {
                if (AccountName != null)
                {
                    writer.WritePropertyName("accountName");
                    writer.WriteStringValue(AccountName);
                }
                else
                {
                    writer.WriteNull("accountName");
                }
            }
            if (Optional.IsDefined(AccountNumber))
            {
                if (AccountNumber != null)
                {
                    writer.WritePropertyName("accountNumber");
                    writer.WriteStringValue(AccountNumber);
                }
                else
                {
                    writer.WriteNull("accountNumber");
                }
            }
            if (Optional.IsDefined(Bsb))
            {
                if (Bsb != null)
                {
                    writer.WritePropertyName("bsb");
                    writer.WriteStringValue(Bsb);
                }
                else
                {
                    writer.WriteNull("bsb");
                }
            }
            if (Optional.IsDefined(VehicleMake))
            {
                if (VehicleMake != null)
                {
                    writer.WritePropertyName("vehicleMake");
                    writer.WriteStringValue(VehicleMake);
                }
                else
                {
                    writer.WriteNull("vehicleMake");
                }
            }
            if (Optional.IsDefined(VehicleYear))
            {
                if (VehicleYear != null)
                {
                    writer.WritePropertyName("vehicleYear");
                    writer.WriteNumberValue(VehicleYear.Value);
                }
                else
                {
                    writer.WriteNull("vehicleYear");
                }
            }
            if (Optional.IsDefined(PropertyType))
            {
                writer.WritePropertyName("propertyType");
                writer.WriteStringValue(PropertyType.Value.ToString());
            }
            if (Optional.IsDefined(IsRentalIncome))
            {
                if (IsRentalIncome != null)
                {
                    writer.WritePropertyName("isRentalIncome");
                    writer.WriteBooleanValue(IsRentalIncome.Value);
                }
                else
                {
                    writer.WriteNull("isRentalIncome");
                }
            }
            if (Optional.IsDefined(IsExistingMortgages))
            {
                if (IsExistingMortgages != null)
                {
                    writer.WritePropertyName("isExistingMortgages");
                    writer.WriteBooleanValue(IsExistingMortgages.Value);
                }
                else
                {
                    writer.WriteNull("isExistingMortgages");
                }
            }
            if (Optional.IsDefined(IsAccountDetailsKnown))
            {
                if (IsAccountDetailsKnown != null)
                {
                    writer.WritePropertyName("isAccountDetailsKnown");
                    writer.WriteBooleanValue(IsAccountDetailsKnown.Value);
                }
                else
                {
                    writer.WriteNull("isAccountDetailsKnown");
                }
            }
            if (Optional.IsDefined(Institution))
            {
                if (Institution != null)
                {
                    writer.WritePropertyName("institution");
                    writer.WriteStringValue(Institution);
                }
                else
                {
                    writer.WriteNull("institution");
                }
            }
            if (Optional.IsDefined(AssetTypeId))
            {
                if (AssetTypeId != null)
                {
                    writer.WritePropertyName("assetTypeId");
                    writer.WriteNumberValue(AssetTypeId.Value);
                }
                else
                {
                    writer.WriteNull("assetTypeId");
                }
            }
            if (Optional.IsDefined(AssetSubTypeId))
            {
                if (AssetSubTypeId != null)
                {
                    writer.WritePropertyName("assetSubTypeId");
                    writer.WriteNumberValue(AssetSubTypeId.Value);
                }
                else
                {
                    writer.WriteNull("assetSubTypeId");
                }
            }
            if (Optional.IsCollectionDefined(Ownership))
            {
                if (Ownership != null)
                {
                    writer.WritePropertyName("ownership");
                    writer.WriteStartArray();
                    foreach (var item in Ownership)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("ownership");
                }
            }
            writer.WriteEndObject();
        }

        internal static LeadAsset DeserializeLeadAsset(JsonElement element)
        {
            Optional<string> lid = default;
            Optional<string> description = default;
            Optional<double?> value = default;
            Optional<string> accountName = default;
            Optional<string> accountNumber = default;
            Optional<string> bsb = default;
            Optional<string> vehicleMake = default;
            Optional<int?> vehicleYear = default;
            Optional<AddressPropertyType> propertyType = default;
            Optional<bool?> isRentalIncome = default;
            Optional<bool?> isExistingMortgages = default;
            Optional<bool?> isAccountDetailsKnown = default;
            Optional<string> institution = default;
            Optional<int?> assetTypeId = default;
            Optional<int?> assetSubTypeId = default;
            Optional<IList<LeadOwnership>> ownership = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("lid"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lid = null;
                        continue;
                    }
                    lid = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        description = null;
                        continue;
                    }
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("value"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        value = null;
                        continue;
                    }
                    value = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("accountName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        accountName = null;
                        continue;
                    }
                    accountName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("accountNumber"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        accountNumber = null;
                        continue;
                    }
                    accountNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("bsb"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        bsb = null;
                        continue;
                    }
                    bsb = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("vehicleMake"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        vehicleMake = null;
                        continue;
                    }
                    vehicleMake = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("vehicleYear"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        vehicleYear = null;
                        continue;
                    }
                    vehicleYear = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("propertyType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    propertyType = new AddressPropertyType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("isRentalIncome"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        isRentalIncome = null;
                        continue;
                    }
                    isRentalIncome = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("isExistingMortgages"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        isExistingMortgages = null;
                        continue;
                    }
                    isExistingMortgages = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("isAccountDetailsKnown"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        isAccountDetailsKnown = null;
                        continue;
                    }
                    isAccountDetailsKnown = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("institution"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        institution = null;
                        continue;
                    }
                    institution = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("assetTypeId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        assetTypeId = null;
                        continue;
                    }
                    assetTypeId = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("assetSubTypeId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        assetSubTypeId = null;
                        continue;
                    }
                    assetSubTypeId = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("ownership"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        ownership = null;
                        continue;
                    }
                    List<LeadOwnership> array = new List<LeadOwnership>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(LeadOwnership.DeserializeLeadOwnership(item));
                    }
                    ownership = array;
                    continue;
                }
            }
            return new LeadAsset(lid.Value, description.Value, Optional.ToNullable(value), accountName.Value, accountNumber.Value, bsb.Value, vehicleMake.Value, Optional.ToNullable(vehicleYear), Optional.ToNullable(propertyType), Optional.ToNullable(isRentalIncome), Optional.ToNullable(isExistingMortgages), Optional.ToNullable(isAccountDetailsKnown), institution.Value, Optional.ToNullable(assetTypeId), Optional.ToNullable(assetSubTypeId), Optional.ToList(ownership));
        }
    }
}
