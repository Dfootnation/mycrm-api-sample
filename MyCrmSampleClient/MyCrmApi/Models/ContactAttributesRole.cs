// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    /// <summary> The ContactAttributesRole. </summary>
    public readonly partial struct ContactAttributesRole : IEquatable<ContactAttributesRole>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ContactAttributesRole"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ContactAttributesRole(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AdultValue = "Adult";
        private const string ChildValue = "Child";
        private const string OtherValue = "Other";

        /// <summary> Adult. </summary>
        public static ContactAttributesRole Adult { get; } = new ContactAttributesRole(AdultValue);
        /// <summary> Child. </summary>
        public static ContactAttributesRole Child { get; } = new ContactAttributesRole(ChildValue);
        /// <summary> Other. </summary>
        public static ContactAttributesRole Other { get; } = new ContactAttributesRole(OtherValue);
        /// <summary> Determines if two <see cref="ContactAttributesRole"/> values are the same. </summary>
        public static bool operator ==(ContactAttributesRole left, ContactAttributesRole right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ContactAttributesRole"/> values are not the same. </summary>
        public static bool operator !=(ContactAttributesRole left, ContactAttributesRole right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ContactAttributesRole"/>. </summary>
        public static implicit operator ContactAttributesRole(string value) => new ContactAttributesRole(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ContactAttributesRole other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ContactAttributesRole other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
